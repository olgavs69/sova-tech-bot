import os
import tempfile
import speech_recognition as sr
from aiogram import Bot, Dispatcher, Router, F, types
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hbold
from pydub import AudioSegment
import asyncio
import logging
import config as cf  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ TOKEN –∑–¥–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

TEMP_DIR = r'C:\WORK\sova_rest_bot\sova_rest_bot-master\files\voices'

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token='7515032749:AAG84O4mCALPRsviMJv--l7NVUkMghm-Adw')
dp = Dispatcher()
router = Router()

waiting_for_question = set()  # –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–≤–æ–¥–∞

def get_report_markup() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÑ –°–æ–∑–¥–∞—Ç—å PDF –æ—Ç—á—ë—Ç", callback_data="create_pdf")],
        [InlineKeyboardButton(text="üìä –°–æ–∑–¥–∞—Ç—å Excel –æ—Ç—á—ë—Ç", callback_data="create_excel")]
    ])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(F.text.lower() == "/start")
async def send_welcome(message: Message):
    report_text = """
üìç –û–±—ä–µ–∫—Ç: –î–µ–º–æ –†–µ—Å—Ç–æ—Ä–∞–Ω
üìä –û—Ç—á—ë—Ç: –í—ã—Ä—É—á–∫–∞ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏
üìÖ –ü–µ—Ä–∏–æ–¥: –ü—Ä–æ—à–ª–∞—è –Ω–µ–¥–µ–ª—è

–í—ã—Ä—É—á–∫–∞: 1 500 000 —Ä—É–±

–î–∏–Ω–∞–º–∏–∫–∞ –Ω–µ–¥–µ–ª—è: -5%
–î–∏–Ω–∞–º–∏–∫–∞ –º–µ—Å—è—Ü: +4%
–î–∏–Ω–∞–º–∏–∫–∞ –≥–æ–¥: +8%

–ü–ª–∞–Ω: 5 000 000 —Ä—É–±
–§–∞–∫—Ç: 3 000 000 —Ä—É–±
–ü—Ä–æ–≥–Ω–æ–∑: 4 500 000 —Ä—É–±
    """

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç—á—ë—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer(report_text, reply_markup=get_report_markup())


async def main() -> None:
    logging.info('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...')
    dp.include_router(router)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ router –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
